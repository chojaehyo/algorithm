#include <stdio.h>
const int MAX = 100;
int n, arr[MAX];

int getLeft(int arr[], int start, int end, int pivot, int result[]){
  int idx=0;
  for(int i=start;i<=end;i++){
    if(arr[i] <= pivot) result[idx++] = arr[i];
  }
  return idx;
}

int getRight(int arr[], int start, int end, int pivot, int result[]){
  int idx=0;
  for(int i=start;i<=end;i++){
    if(arr[i] > pivot) result[idx++] = arr[i];
  }
  return idx;
}

void quickSort(int arr[], int start, int end){
  if(start >= end) return;
  int pivot = arr[start];
  int left[MAX], right[MAX];
  
  int left_cnt = getLeft(arr, start+1, end, pivot, left);
  int right_cnt = getRight(arr, start+1, end, pivot, right);
  
  for(int i=0;i<left_cnt;i++) arr[start+i] = left[i];
  
  arr[start+left_cnt] = pivot;
  
  for(int i=0;i<right_cnt;i++) arr[start+left_cnt+1+i] = right[i];
  
  quickSort(arr, start, start+left_cnt-1);
  quickSort(arr, start+left_cnt+1, end);
}

int main() {
  scanf("%d", &n);
  for(int i=0;i<n;i++) scanf("%d", &arr[i]);
  
  quickSort(arr, 0, n-1);
  
  for(int i=0;i<n;i++) printf("%d ", arr[i]);
  return 0;
}
